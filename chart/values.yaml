replicaCount: 1

image:
  repository: anair/lifecycle-jira-integration
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

lifecycle: {}
#  baseUrl:
#  appReportBaseUrl:

jira: {}
#  webhook:
#    enabled: false
#    authToken:
#    host:
#    path:

log:
  level: info

mapping:
  lifecycleStageToScmBranch:
    {"build": "develop","stage-release": "master","release": "release"}
  threatLevelToJiraFields:
    {
      "10": { "License": { "priority": "P1", "severity": "S1", "bugNature": "SCA-License" }, "Security": { "priority": "P1", "severity": "S1", "bugNature": "SCA-Security" } },
      "9": { "License": { "priority": "P1", "severity": "S1", "bugNature": "SCA-License" }, "Security": { "priority": "P1", "severity": "S2", "bugNature": "SCA-Security" } },
      "8": { "License": { "priority": "P1", "severity": "S1", "bugNature": "SCA-License" }, "Security": { "priority": "P1", "severity": "S3", "bugNature": "SCA-Security" } },
      "7": { "License": { "priority": "P1", "severity": "S1", "bugNature": "SCA-License" }, "Security": { "priority": "P2", "severity": "S4", "bugNature": "SCA-Security" } }
    }


serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
   fsGroup: 2000

securityContext:
   capabilities:
     drop:
     - ALL
   readOnlyRootFilesystem: false
   runAsNonRoot: true
   runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
   limits:
     cpu: 500m
     memory: 512Mi
   requests:
     cpu: 100m
     memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
